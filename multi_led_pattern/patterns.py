"""
Patterns for multi led pattern module
"""

"""
Single high value at at a time
"""
PATTERN_A = [
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.25),
(0, 1, 0, 0, 0, 0, (0, 0, 0), 0.25),
(0, 0, 1, 0, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 0, (1, 0, 0), 0.25),
(0, 0, 0, 1, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 1, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.25),
(0, 0, 0, 0, 1, 0, (0, 0, 0), 0.25),
(0, 0, 0, 1, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 0, (0, 1, 0), 0.25),
(0, 0, 1, 0, 0, 0, (0, 0, 0), 0.25),
(0, 1, 0, 0, 0, 0, (0, 0, 0), 0.25),
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.25),
(0, 1, 0, 0, 0, 0, (0, 0 ,0), 0.25),
(0, 0, 1, 0, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 0, (0, 0, 1), 0.25),
(0, 0, 0, 1, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 1, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.25),
(0, 0, 0, 0, 1, 0, (0, 0, 0), 0.25),
(0, 0, 0, 1, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 0, (0, 1, 0), 0.25),
(0, 0, 1, 0, 0, 0, (0, 0, 0), 0.25),
(0, 1, 0, 0, 0, 0, (0, 0, 0), 0.25),
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.25),
(0, 1, 0, 0, 0, 0, (0, 0, 0), 0.25),
(0, 0, 1, 0, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 0, (1, 0, 0), 0.25),
(0, 0, 0, 1, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 1, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.25),
(0, 0, 0, 0, 1, 0, (0, 0, 0), 0.25),
(0, 0, 0, 1, 0, 0, (0, 0, 0), 0.25),
(0, 0, 0, 0, 0, 0, (0, 1, 0), 0.25),
(0, 0, 1, 0, 0, 0, (0, 0, 0), 0.25),
(0, 1, 0, 0, 0, 0, (0, 0, 0), 0.25)
]

"""
Cascading lights
"""
PATTERN_B = [
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.15),
(1, 0, 0, 0, 0, 1, (0, 0, 0), 0.15),
(1, 1, 0, 0, 0, 1, (0, 0, 0), 0.15),
(1, 1, 0, 0, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 0, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (1, 1, 1), 0.15),
(1, 1, 1, 1, 1, 1, (1, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (0, 1, 0), 0.15),
(1, 1, 1, 1, 1, 1, (0, 0, 1), 0.15),
(1, 1, 1, 1, 1, 1, (0, 1, 0), 0.15),
(1, 1, 1, 1, 1, 1, (1, 0, 0), 0.15),
(0, 1, 1, 1, 1, 1, (0, 0, 0), 0.15),
(0, 0, 1, 1, 1, 1, (0, 0, 0), 0.15),
(0, 0, 0, 1, 1, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 1, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 0, 0, (0, 0, 0), 0.15),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 1, 1, (0, 0, 0), 0.15),
(0, 0, 0, 1, 1, 1, (0, 0, 0), 0.15),
(0, 0, 1, 1, 1, 1, (0, 0, 0), 0.15),
(0, 1, 1, 1, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 0, (0, 0, 0), 0.15),
(1, 1, 1, 1, 0, 0, (0, 0, 0), 0.15),
(1, 1, 1, 0, 0, 0, (0, 0, 0), 0.15),
(1, 1, 0, 0, 0, 0, (0, 0, 0), 0.15),
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.15),
(1, 1, 0, 0, 0, 0, (0, 0, 0), 0.15),
(1, 1, 1, 0, 0, 0, (0, 0, 0), 0.15),
(1, 1, 1, 0, 0, 0, (1, 0, 1), 0.15),
(1, 1, 1, 1, 0, 0, (1, 0, 1), 0.15),
(1, 1, 1, 1, 1, 0, (1, 0, 1), 0.15),
(1, 1, 1, 1, 1, 1, (1, 0, 1), 0.15),
(0, 1, 1, 1, 1, 1, (1, 0, 1), 0.15),
(0, 0, 1, 1, 1, 1, (1, 0, 1), 0.15),
(0, 0, 0, 1, 1, 1, (1, 0, 1), 0.15),
(0, 0, 0, 1, 1, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 1, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.15),
(0, 0, 0, 0, 0, 0, (0, 0, 0), 0.15),
(1, 0, 0, 0, 0, 1, (0, 0, 0), 0.15),
(1, 1, 0, 0, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (0, 1, 1), 0.15),
(0, 1, 1, 1, 1, 0, (0, 1, 1), 0.15),
(0, 0, 1, 1, 0, 0, (0, 1, 1), 0.15),
(0, 0, 0, 0, 0, 0, (0, 1, 1), 0.15),
(0, 0, 1, 1, 0, 0, (0, 0, 0), 0.15),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.15),
(1, 1, 1, 1, 1, 1, (1, 1, 0), 0.15),
(1, 1, 0, 0, 1, 1, (1, 1, 0), 0.15),
(1, 0, 0, 0, 0, 1, (1, 1, 0), 0.15),
(0, 0, 0, 0, 0, 0, (1, 1, 0), 0.15),
(0, 0, 0, 0, 0, 0, (0, 0, 0), 0.15)
]

"""
1 off, then 2 off, then 3 off, etc. 
"""
PATTERN_C = [
(1, 1, 1, 1, 1, 1, (1, 1, 0), 0.5),
(0, 1, 1, 1, 1, 1, (1, 1, 0), 0.5),
(1, 0, 1, 1, 1, 1, (1, 1, 0), 0.5),
(1, 1, 0, 1, 1, 1, (1, 1, 0), 0.5),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 1, 1, (0, 1, 1), 0.5),
(1, 1, 1, 1, 0, 1, (0, 1, 1), 0.5),
(1, 1, 1, 1, 1, 0, (0, 1, 1), 0.5),
(1, 1, 1, 1, 0, 1, (0, 1, 1), 0.5),
(1, 1, 1, 0, 1, 1, (0, 1, 1), 0.5),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 0, 1, 1, 1, (1, 0, 1), 0.5),
(1, 0, 1, 1, 1, 1, (1, 0, 1), 0.5),
(0, 1, 1, 1, 1, 1, (1, 0, 1), 0.5),
(1, 0, 1, 1, 1, 1, (1, 0, 1), 0.5),
(1, 1, 0, 1, 1, 1, (1, 0, 1), 0.5),
(1, 0, 1, 1, 1, 1, (1, 0, 1), 0.5),
(1, 1, 0, 1, 1, 1, (1, 0, 1), 0.5),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 1, 1, (1, 1, 1), 0.5),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 0, 1, 1, 1, (1, 1, 1), 0.5),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 1, 1, (1, 1, 1), 0.5),
(1, 1, 1, 1, 0, 1, (1, 1, 1), 0.5),
(1, 1, 1, 1, 1, 0, (1, 1, 1), 0.5),
(1, 1, 1, 1, 0, 1, (1, 1, 1), 0.5),
(1, 1, 1, 0, 1, 1, (1, 1, 1), 0.5),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.5),

(1, 1, 1, 0, 1, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 0, 1, (0, 1, 1), 0.5),
(1, 1, 1, 1, 0, 0, (0, 1, 1), 0.5),
(1, 1, 1, 0, 0, 1, (0, 1, 1), 0.5),
(1, 1, 1, 1, 0, 0, (0, 1, 1), 0.5),
(1, 1, 1, 0, 0, 1, (0, 1, 1), 0.5),
(1, 1, 1, 0, 1, 1, (0, 0, 0), 0.5),
(1, 1, 0, 1, 1, 1, (0, 0, 0), 0.5),
(1, 0, 0, 1, 1, 1, (1, 1, 0), 0.5),
(1, 1, 0, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 1, 1, (0, 0, 0), 0.5),
(1, 1, 0, 1, 1, 1, (0, 0, 0), 0.5),
(1, 0, 0, 1, 1, 1, (1, 1, 0), 0.5),
(0, 0, 1, 1, 1, 1, (1, 1, 0), 0.5),

(0, 0, 0, 1, 1, 1, (1, 1, 0), 0.5),
(1, 0, 0, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 0, 0, 1, 1, (0, 0, 0), 0.5),
(1, 0, 0, 1, 1, 1, (0, 0, 0), 0.5),
(1, 1, 0, 0, 1, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 0, 1, (0, 0, 0), 0.5),
(1, 1, 1, 0, 0, 0, (1, 0, 1), 0.5),

(1, 1, 1, 0, 0, 0, (0, 0, 0), 0.5),
(1, 1, 0, 0, 0, 1, (0, 0, 0), 0.5),
(1, 0, 0, 0, 1, 1, (0, 0, 0), 0.5),

(1, 0, 0, 0, 0, 1, (0, 0, 0), 0.5),
(1, 0, 0, 0, 0, 1, (0, 0, 0), 0.5),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.5),
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.5),
(0, 0, 0, 0, 0, 0, (0, 0, 0), 0.5)
]

"""
Varying speeds
"""
PATTERN_D = [
(0, 0, 0, 0, 0, 0, (0, 0, 0), 0.2),
(1, 0, 0, 0, 0, 0, (0, 0, 0), 0.2),
(1, 1, 0, 0, 0, 0, (0, 0, 0), 0.2),
(0, 1, 1, 0, 0, 0, (0, 0, 0), 0.2),
(0, 0, 1, 1, 0, 0, (0, 0, 0), 0.2),
(0, 0, 0, 1, 1, 0, (0, 0, 0), 0.2),
(0, 0, 0, 0, 1, 1, (0, 0, 0), 0.2),
(0, 0, 0, 0, 0, 1, (0, 0, 0), 0.2),
(0, 0, 1, 1, 0, 0, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(0, 0, 1, 1, 0, 0, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(0, 0, 1, 1, 0, 0, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(0, 0, 1, 1, 0, 0, (0, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.05),
(1, 1, 1, 1, 1, 1, (0, 0, 0), 0.05),
(1, 1, 1, 1, 1, 1, (1, 0, 0), 0.3),
(1, 1, 1, 1, 1, 1, (0, 0, 1), 0.3),
(1, 1, 1, 1, 1, 1, (0, 1, 0), 0.3),
(1, 1, 1, 1, 1, 1, (0, 0, 1), 0.3),
(1, 1, 1, 1, 1, 1, (0, 1, 0), 0.3),
(1, 1, 1, 1, 1, 1, (1, 0, 0), 0.3),
(0, 1, 0, 0, 1, 0, (1, 0, 0), 0.05),
(1, 1, 0, 1, 1, 0, (1, 0, 0), 0.05),
(0, 1, 1, 0, 1, 1, (1, 0, 0), 0.05),
(1, 1, 0, 0, 1, 0, (1, 0, 0), 0.05),
(0, 1, 0, 0, 1, 1, (1, 0, 0), 0.05),
(1, 1, 0, 0, 1, 0, (1, 0, 0), 0.05),
(0, 1, 0, 0, 1, 1, (1, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (1, 0, 0), 0.05),
(1, 1, 0, 0, 1, 1, (1, 0, 0), 0.05),
(0, 1, 1, 1, 1, 0, (1, 0, 0), 0.05),
(1, 1, 0, 0, 1, 1, (1, 0, 0), 0.05),

(1, 0, 1, 0, 1, 0, (1, 0, 0), 0.2),
(1, 0, 1, 0, 1, 0, (0, 1, 0), 0.2),
(1, 0, 1, 0, 1, 0, (0, 0, 1), 0.2),

(0, 1, 0, 1, 0, 1, (0, 0, 1), 0.2),
(0, 1, 0, 1, 0, 1, (0, 1, 0), 0.2),
(0, 1, 0, 1, 0, 1, (1, 0, 0), 0.2),

(1, 0, 1, 0, 1, 0, (1, 1, 0), 0.2),
(1, 0, 1, 0, 1, 0, (0, 1, 1), 0.2),
(1, 0, 1, 0, 1, 0, (1, 0, 1), 0.2),

(0, 1, 0, 1, 0, 1, (1, 0, 1), 0.2),
(0, 1, 0, 1, 0, 1, (1, 1, 0), 0.2),
(0, 1, 0, 1, 0, 1, (0, 1, 1), 0.2),

(1, 1, 1, 0, 0, 0, (0, 0, 0), 0.5),
(0, 0, 0, 1, 1, 1, (0, 0, 0), 0.5),
(0, 1, 1, 1, 1, 0, (0, 0, 0), 0.5),
(1, 1, 0, 0, 1, 1, (0, 0, 0), 0.5),
(1, 0, 1, 1, 0, 1, (0, 0, 0), 0.5),
]

def return_pattern(pattern):
	if pattern == "A":
		return PATTERN_A
	if pattern == "B":
		return PATTERN_B
	if pattern == "C":
		return PATTERN_C
	if pattern == "D":
		return PATTERN_D
	else:
		raise Exception("Bad Pattern")
